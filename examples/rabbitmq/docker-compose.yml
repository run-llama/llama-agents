version: "3"
services:
  rabbitmq:
    image: rabbitmq:3.13-management
    hostname: "rabbitmq"
    env_file:
      - ./.env.docker
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq:/var/lib/rabbitmq/
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 10s
      retries: 5
  control_plane:
    image: multi_workflows_rabbitmq:latest
    command: sh -c "python -m multi_workflows_rabbitmq.deployment.core"
    env_file:
      - ./.env.docker
    ports:
      - "8000:8000"
    volumes:
      - ./multi_workflows_rabbitmq:/app/multi_workflows_rabbitmq # load local code change to container without the need of rebuild
      - ./logging.ini:/app/logging.ini
    depends_on:
      rabbitmq:
        condition: service_healthy
    platform: linux/amd64
    build:
      context: .
      dockerfile: ./multi-workflows-rabbitmq/Dockerfile
    healthcheck:
      test: wget --no-verbose --tries=1 http://0.0.0.0:8000/ || exit 1
      interval: 30s
      retries: 5
      start_period: 20s
      timeout: 10s
  funny_joke_workflow:
    image: multi_workflows_rabbitmq:latest
    command: sh -c "python -m multi_workflows_rabbitmq.deployment.workflow_funny_joke"
    env_file:
      - ./.env.docker
    ports:
      - "8001:8001"
    volumes:
      - ./multi_workflows_rabbitmq:/app/multi_workflows_rabbitmq # load local code change to container without the need of rebuild
      - ./logging.ini:/app/logging.ini
    platform: linux/amd64
    depends_on:
      rabbitmq:
        condition: service_healthy
      control_plane:
        condition: service_healthy
    build:
      context: .
      dockerfile: ./multi-workflows-rabbitmq/Dockerfile
    healthcheck:
      test: wget --no-verbose --tries=1 http://0.0.0.0:8001/ || exit 1
      interval: 30s
      retries: 5
      start_period: 20s
      timeout: 10s
volumes:
  rabbitmq:
