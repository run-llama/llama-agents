version: "3"
services:
  rabbitmq:
    image: rabbitmq:3.13-management
    hostname: "rabbitmq"
    env_file:
      - .env.docker
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq:/var/lib/rabbitmq/
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 10s
      retries: 5
  control_plane:
    image: human_in_the_loop:latest
    command: sh -c "python -m human_in_the_loop.core_services.control_plane"
    env_file:
      - .env.docker
    ports:
      - "8001:8001"
    volumes:
      - ./human_in_the_loop:/app/human_in_the_loop # load local code change to container without the need of rebuild
      - ./logging.ini:/app/logging.ini
    depends_on:
      rabbitmq:
        condition: service_healthy
    platform: linux/amd64
    build:
      context: .
      dockerfile: ./Dockerfile
    healthcheck:
      test: wget --no-verbose --tries=1 http://0.0.0.0:8001/ || exit 1
      interval: 30s
      retries: 5
      start_period: 20s
      timeout: 10s
  funny_agent:
    image: human_in_the_loop:latest
    command: sh -c "python -m human_in_the_loop.agent_services.funny_agent"
    env_file:
      - .env.docker
    ports:
      - "8002:8002"
    volumes:
      - ./human_in_the_loop:/app/human_in_the_loop # load local code change to container without the need of rebuild
      - ./logging.ini:/app/logging.ini
    depends_on:
      rabbitmq:
        condition: service_healthy
      control_plane:
        condition: service_healthy
    platform: linux/amd64
    build:
      context: .
      dockerfile: ./Dockerfile
    healthcheck:
      test: wget --no-verbose --tries=1 http://0.0.0.0:8002/ || exit 1
      interval: 30s
      retries: 5
      start_period: 20s
      timeout: 10s
  hitloop:
    image: human_in_the_loop:latest
    command: sh -c "python -m human_in_the_loop.apps.gradio_app"
    env_file:
      - .env.docker
    ports:
      - "8003:8003"
    volumes:
      - ./human_in_the_loop:/app/human_in_the_loop # load local code change to container without the need of rebuild
      - ./logging.ini:/app/logging.ini
      - ./task_results:/app/task_results
    platform: linux/amd64
    depends_on:
      rabbitmq:
        condition: service_healthy
      control_plane:
        condition: service_healthy
    build:
      context: .
      dockerfile: ./Dockerfile
    healthcheck:
      test: wget --no-verbose --tries=1 http://0.0.0.0:8003/ || exit 1
      interval: 30s
      retries: 5
      start_period: 20s
      timeout: 10s
  gradio_app:
    image: human_in_the_loop:latest
    command: sh -c "python -m human_in_the_loop.apps.launch_gradio_app"
    env_file:
      - .env.docker
    ports:
      - "8080:8080"
    volumes:
      - ./human_in_the_loop:/app/human_in_the_loop # load local code change to container without the need of rebuild
      - ./logging.ini:/app/logging.ini
      - ./task_results:/app/task_results
    platform: linux/amd64
    depends_on:
      rabbitmq:
        condition: service_healthy
      control_plane:
        condition: service_healthy
      hitloop:
        condition: service_healthy
    build:
      context: .
      dockerfile: ./Dockerfile
volumes:
  rabbitmq:
