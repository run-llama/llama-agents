services:
  message_queue:
    extends:
      file: ../../docker/docker-compose.yml
      service: message_queue

  control_plane:
    extends:
      file: ../../docker/docker-compose.yml
      service: control_plane

  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage

  rag_workflow:
    build:
      context: ./workflows
      dockerfile: dockerfile
    ports:
      - "8002:8002"
    volumes:
      - ./workflows:/app
    depends_on:
      control_plane:
        condition: service_started
    environment:
      DEPLOY_SETTINGS_NAME: rag_workflow
      OPENAI_API_KEY: $OPENAI_API_KEY
      CONTROL_PLANE_HOST: control_plane
      CONTROL_PLANE_PORT: 8000
    deploy:
      replicas: 1
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:8002/"]
      interval: 60s
      timeout: 5s
      retries: 3
      start_period: 20s

  agentic_workflow:
    build:
      context: ./workflows
      dockerfile: dockerfile
    ports:
      - "8003:8003"
    volumes:
      - ./workflows:/app
    depends_on:
      control_plane:
        condition: service_started
    environment:
      DEPLOY_SETTINGS_NAME: agentic_workflow
      OPENAI_API_KEY: $OPENAI_API_KEY
      CONTROL_PLANE_HOST: control_plane
      CONTROL_PLANE_PORT: 8000
    deploy:
      replicas: 1
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:8003/"]
      interval: 60s
      timeout: 5s
      retries: 3
      start_period: 20s

  frontend:
    build:
      context: ./frontend
      dockerfile: dockerfile
    environment:
      CONTROL_PLANE_HOST: control_plane
      CONTROL_PLANE_PORT: 8000
    ports:
      - "3000:3000"
      - "9000:8000"
    volumes:
      - ./frontend:/app
    depends_on:
      rag_workflow:
        condition: service_started
      agentic_workflow:
        condition: service_started

volumes:
  qdrant_data:
